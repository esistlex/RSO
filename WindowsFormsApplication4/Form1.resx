<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        xXw9FoYAAAAASUVORK5CYII=
</value>
  </data>
</root>